# -*- coding: utf-8 -*-
"""482P2-Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M0Gvad7dvQ0G87ChlwBFdaV__OtfQpH3
"""

# !pip install wikipedia

import wikipedia
import re
import nltk
import json
import jsonpickle

nltk.download('punkt')

class Section:
    def __init__(self, title, content, parent):
        self.title = title
        self.content = content
        # self.tokenizeText(content)
        self.parent = parent
        self.children = []

    def tokenizeText(self, text):
        return [[nltk.word_tokenize(s) for s in nltk.sent_tokenize(par.strip())] for par in text.split("\n\n")]

    def addChild(self, child):
        self.children.append(child)

    def __str__(self):
        _str = "Section: %s\nParent: %s\n" % (self.title, self.parent)
        for i, child in enumerate(self.children):
            _str = _str + "Child " + str(i) + ": " + child.title + "\n"
        _str = _str + "Content: " + str(self.content)
        return _str
    

cp = wikipedia.page("California Polytechnic State University")
cp_str = cp.content
section_headers = re.findall(r'[=]+[\s]*[\w\s]+[\s]*[=]+', cp_str)

all_sections = {}
p1_names = {}
hierarchy = {0.0:'none', 1.0:'', 2.0:'', 3.0:''}
for i in section_headers:
    h_level = ((len(re.findall(r'=',i))-4)/2)+1 # identify current section hierarchical level
    parent = hierarchy[h_level-1.0] # what is the parent of the current section

    i_arr = i.split(" ")
    text = ' '.join(i_arr[1:len(i_arr)-1]) # Get the text of the section

    hierarchy[h_level] = text # save new parents to hierarchy dict.
    section_obj = Section(text, cp.section(text), parent) # new section obj for current section
    if parent != 'none': # if it's not a root node, add the childern to each parent
        all_sections[parent].addChild(section_obj)
    else:
        p1_names[text] = section_obj
    all_sections[text] = section_obj # Add section to dictionary of sections


app_json = jsonpickle.encode(p1_names)
# print(app_json)

with open('data.json', 'w') as f:
    f.write(app_json)
